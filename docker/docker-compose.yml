version: '3'

networks:
  srm:
    driver: bridge
    driver_opts:
        com.docker.network.enable_ipv4: "true"
    ipam:
      driver: default
      config:
        - subnet: 172.32.0.0/16

volumes:
  srm_mysql:
    driver: local
  srm_mongodb:
    driver: local

services:

  estoque-service:
    image: srm/estoque-service:parte8
    container_name: srm_estoque
    networks:
      srm:
        ipv4_address: 172.32.0.101
    expose:
      - 8080
    environment:
      TZ: "America/Sao_Paulo"
      SERVER_PORT: "8080"
      CONFIGSERVER_URI: "http://config-server:8080"
      PROFILE: "default"

  pedido-service:
    image: srm/pedido-service:parte8
    container_name: srm_pedido
    networks:
      srm:
        ipv4_address: 172.32.0.106
    expose:
      - 8080
    environment:
      TZ: "America/Sao_Paulo"
      SERVER_PORT: "8080"
      CONFIGSERVER_URI: "http://config-server:8080"
      PROFILE: "default"

  config-server:
    image: srm/config-server:parte8
    container_name: srm_configserver
    networks:
      srm:
        ipv4_address: 172.32.0.103
    expose:
      - 8080
    environment:
      TZ: "America/Sao_Paulo"
      PROFILE: "default"
      SERVER_PORT: "8080"
    volumes:
      - ./src/config:/usr/local/config-repo

  rabbitmq-srm:
    image: rabbitmq:3-management
    container_name: rabbitmq_srm
    networks:
      srm:
        ipv4_address: 172.32.0.104
      
  service-discovery:
    image: srm/service-discovery:parte8
    container_name: srm_servicediscovery
    networks:
      srm:
        ipv4_address: 172.32.0.105
    expose:
      - 8080
    environment:
      TZ: "America/Sao_Paulo"
      PROFILE: "default"
      SERVER_PORT: "8080"

  service-gateway:
    image: srm/service-gateway:parte8
    container_name: srm_servicegateway
    networks:
      srm:
        ipv4_address: 172.32.0.109
    expose:
      - 8080
    environment:
      TZ: "America/Sao_Paulo"
      SERVER_PORT: "8080"
      CONFIGSERVER_URI: "http://config-server:8080"
      PROFILE: "default"

  special-route-service:
    image: srm/special-route-service:parte8
    container_name: srm_specialroute
    networks:
      srm:
        ipv4_address: 172.32.0.110
    expose:
      - 8080
    environment:
      TZ: "America/Sao_Paulo"
      SERVER_PORT: "8080"
      CONFIGSERVER_URI: "http://config-server:8080"
      PROFILE: "default"

  database:
    image: mysql
    container_name: srm_mysql
    command: --init-file /usr/home/database/init.sql
    restart: always
    networks:
      srm:
        ipv4_address: 172.32.0.102
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: db_srm
      TZ: "America/Sao_Paulo"
    volumes:
      - srm_mysql:/var/lib/mysql
      - ./src/mysql:/usr/home/database

  mongodb:
    image: mongo:3.6.3
    container_name: srm_mongo
    command: --bind_ip_all
    networks:
      srm:
        ipv4_address: 172.32.0.107
    expose:
      - 27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_DATABASE: db_srm
    volumes:
      - ./src/mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - srm_mongodb:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    networks:
      srm:
        ipv4_address: 172.32.0.108
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1234

  security-service:
    image: srm/security-service:parte8
    container_name: srm_securityservice
    networks:
      srm:
        ipv4_address: 172.32.0.112
    expose:
      - 8080
    environment:
      TZ: "America/Sao_Paulo"
      SERVER_PORT: "8080"
      CONFIGSERVER_URI: "http://config-server:8080"
      PROFILE: "default"

  redis:
    image: redis:alpine
    container_name: srm_redis
    networks:
      srm:
        ipv4_address: 172.32.0.113
    expose:
      - 6379

  kafkaserver:
    image: johnnypark/kafka-zookeeper
    networks:
      srm:
        ipv4_address: 172.32.0.114
    ports:
      - 2181:2181
      - 9092:9092

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      REDIS_HOSTS: local:redis:6379
    networks:
      srm:
        ipv4_address: 172.32.0.115

  logspout:
    image: gliderlabs/logspout
    command: syslog://logs5.papertrailapp.com:40661
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  tracing-service:
    image: srm/tracing-service:parte8
    container_name: srm_tracingservice
    networks:
      srm:
        ipv4_address: 172.32.0.116
    expose:
      - 8080
    environment:
      TZ: "America/Sao_Paulo"
      PROFILE: "default"
      SERVER_PORT: "8080"
